{"version":3,"file":"static/js/416.384e8512.chunk.js","mappings":"iKACA,GAAgB,UAAY,wBAAwB,OAAS,qBAAqB,OAAS,qBAAqB,QAAU,sBAAsB,OAAS,qBAAqB,eAAe,2BAA2B,YAAY,yB,0DCwBpO,EAfa,SAAC,GAAsD,IAArDA,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,MAAUC,GAAkB,YAQjE,OACE,gCAAKC,UAAS,UAAKC,EAAAA,UAAL,YAPF,WAA2C,IAA1CC,EAAyC,uDAAd,UACxC,MAAiB,WAAdA,EAA+BD,EAAAA,OACjB,WAAdC,EAA+BD,EAAAA,OACjB,YAAdC,EAAgCD,EAAAA,aAAnC,CACD,CAGwCE,CAAMP,GAA/B,YAAwCC,GAAUI,EAAAA,OAAlD,YAAmEH,GAASG,EAAO,SAAD,OAAUH,MAAgBC,GAA1H,aACGJ,IAGN,C,iFCtBD,EAA4B,0BAA5B,EAAgE,wB,iDCmDhE,EA7Ce,WAEX,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAA4BF,EAAAA,EAAAA,UAAS,WAArC,eAAOG,EAAP,KAAeC,EAAf,KAQMC,EAAc,CAChB,CACIC,KAAM,UACNC,OAAQ,4FACRC,QAAS,sCAEb,CACIF,KAAM,UACNC,OAAQ,4FACRC,QAAS,4GAIjB,OACI,iBAAKZ,UAAWC,EAAhB,WAEI,SAACY,EAAA,EAAD,UACKJ,EAAYK,KAAI,SAAAC,GAAE,OACf,SAACC,EAAA,EAAD,CAAQC,OAAQF,EAAGL,KAAoBQ,SAAUX,IAAWQ,EAAGL,KAAMS,QAAS,kBAAMX,EAAUO,EAAGL,KAAnB,GAAhDK,EAAGL,KADlB,MAKtBD,EAAYK,KAAI,SAAAC,GAAE,OAAIA,EAAGL,OAASH,IAC/B,iBAAKP,UAAWC,EAA8BkB,QAAS,kBA7BnDP,EA6BgEG,EAAGH,QA7BlDF,EA6B2DK,EAAGL,MA5B3FU,EAAAA,EAAAA,IAAgBR,GAChBN,EAAQI,QACRW,YAAW,kBAAMf,EAAQ,GAAd,GAAmB,KAHnB,IAACM,EAAiBF,CA6BkC,EAAvD,WACI,gBAAKY,IAAKP,EAAGJ,OAAQY,IAAI,aACzB,uBAAIlB,IAAOU,EAAGL,KAAO,iBAAmBK,EAAGH,YAFVG,EAAGL,KADzB,MAS9B,C","sources":["webpack://frontend/./src/@components/flex/Flex.module.scss?5a8f","@components/flex/Flex.tsx","webpack://frontend/./src/contents/main/donate/Donate.module.scss?b279","contents/main/donate/Donate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Flex_container__9+hPm\",\"sticky\":\"Flex_sticky__IjtC4\",\"evenly\":\"Flex_evenly__tm+yC\",\"between\":\"Flex_between__J9aHA\",\"around\":\"Flex_around__AcHSs\",\"fixed-bottom\":\"Flex_fixed-bottom__aIoEy\",\"fixed-top\":\"Flex_fixed-top__tjXxJ\"};","import styles from './Flex.module.scss';\nimport React from 'react';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode,\n  flex?: \"between\" | \"evenly\" | \"around\",\n  sticky?: boolean,\n  fixed?: \"bottom\" | \"top\" | null,\n}\n\nconst Flex = ({children, flex, sticky, fixed, ...props}: Props) => {\n  \n  const check = (flex_type: Props[\"flex\"] = \"between\") => {\n    if(flex_type === \"evenly\") return styles.evenly;\n    if(flex_type === \"around\") return styles.around;\n    if(flex_type === \"between\") return styles.between\n  }\n\n  return (\n    <div className={`${styles.container} ${check(flex)} ${sticky && styles.sticky} ${fixed && styles[`fixed-${fixed}`]}`} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport default Flex","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Donate_container__IzwV2\",\"element\":\"Donate_element__5VaeB\"};","import styles from './Donate.module.scss';\nimport { useState } from 'react';\nimport { copyToClipboard } from 'utils';\n\nimport Flex from '@components/flex/Flex';\nimport Button from '@components/buttons/Button';\n\nconst Donate = () => {\n\n    const [copy, setCopy] = useState(\"\");\n\n    const [crypto, setCrypto] = useState(\"Bitcoin\");\n\n    const onCopy = (address: string, name: string) => {\n        copyToClipboard(address);\n        setCopy(name);\n        setTimeout(() => setCopy(\"\"), 2000)\n    }\n\n    const crypto_list = [\n        {\n            name: \"Bitcoin\",\n            qrcode: \"https://bafkreigkgvfn2q4jlheyxnvesqy675to3v7smsy2gaazzg5jbinuuvjcbq.ipfs.nftstorage.link/\",\n            address: \"18eYRmvB6j8P87YyAb5JVtVd4hbHdubYng\"\n        },\n        {\n            name: \"Cardano\",\n            qrcode: \"https://bafkreiacsewjg5csdeok6yb5brksuowwjlkqeh6j56gvj6cjcoxllmenbu.ipfs.nftstorage.link/\",\n            address: \"addr1qx2m6unxmyye00t6eh3swf60yxa3mgnhrk4rt0csdreuwhdg5e62j6zj6wglh00mxw899zcnj29cdd36muntc8zrkheq0hp3gk\"\n        },\n    ]\n\n    return (\n        <div className={styles.container}>\n\n            <Flex>\n                {crypto_list.map(el => \n                    <Button label1={el.name} key={el.name} selected={crypto === el.name} onClick={() => setCrypto(el.name)} />  \n                )}\n            </Flex>\n\n            {crypto_list.map(el => el.name === crypto &&\n                <div className={styles.element} key={el.name} onClick={() => onCopy(el.address, el.name)}>\n                    <img src={el.qrcode} alt=\"qr code\" />   \n                    <p>{copy===el.name ? \"Copied address\" : el.address}</p>\n                </div> \n            )}\n\n        </div>\n    )\n}\n\nexport default Donate"],"names":["children","flex","sticky","fixed","props","className","styles","flex_type","check","useState","copy","setCopy","crypto","setCrypto","crypto_list","name","qrcode","address","Flex","map","el","Button","label1","selected","onClick","copyToClipboard","setTimeout","src","alt"],"sourceRoot":""}