{"version":3,"file":"static/js/888.303b3efc.chunk.js","mappings":"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","sources":["webpack://frontend/./src/@components/flex/Flex.module.scss?5a8f","@components/flex/Flex.tsx","webpack://frontend/./src/contents/terminal/Terminal.module.scss?d434","webpack://frontend/./src/contents/@components/print/Log.module.scss?3db6","contents/@components/print/Log.tsx","contents/terminal/Terminal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Flex_container__9+hPm\",\"sticky\":\"Flex_sticky__IjtC4\",\"evenly\":\"Flex_evenly__tm+yC\",\"between\":\"Flex_between__J9aHA\",\"around\":\"Flex_around__AcHSs\",\"fixed-bottom\":\"Flex_fixed-bottom__aIoEy\",\"fixed-top\":\"Flex_fixed-top__tjXxJ\"};","import styles from './Flex.module.scss';\nimport React from 'react';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode,\n  flex?: \"between\" | \"evenly\" | \"around\",\n  sticky?: boolean,\n  fixed?: \"bottom\" | \"top\" | null,\n}\n\nconst Flex = ({children, flex, sticky, fixed, ...props}: Props) => {\n  \n  const check = (flex_type: Props[\"flex\"] = \"between\") => {\n    if(flex_type === \"evenly\") return styles.evenly;\n    if(flex_type === \"around\") return styles.around;\n    if(flex_type === \"between\") return styles.between\n  }\n\n  return (\n    <div className={`${styles.container} ${check(flex)} ${sticky && styles.sticky} ${fixed && styles[`fixed-${fixed}`]}`} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport default Flex","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Terminal_container__PLVv3\",\"seconds\":\"Terminal_seconds__gwova\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Log_container__gadTv\",\"element\":\"Log_element__OA6Tg\",\"information\":\"Log_information__TsIr4\",\"arrow\":\"Log_arrow__lcR8t\",\"color\":\"Log_color__fqC4V\",\"action\":\"Log_action__sDAUX\",\"padding\":\"Log_padding__sx5F1\"};","import styles from './Log.module.scss';\nimport {useEffect, useState} from 'react'\nimport {PrintActions} from 'contents/@types';\nimport {copyToClipboard, shorten} from 'utils';\nimport {BsArrowReturnRight, BsSquareFill} from 'react-icons/bs';\n\nimport Flex from '@components/flex/Flex';\n\ninterface Props {\n    data: PrintActions[],\n    onActionLogLabel?: string | number,\n    onActionLogLabelClicked?: string | number,\n    onActionLog?: (log: string) => void;\n}\n\nconst Log = ({data, onActionLog, onActionLogLabel = \"copy\", onActionLogLabelClicked = \"copied\"}: Props) => {\n\n    const [clicked, setClicked] = useState<number | null>(null);\n\n    const onAction = (index: number, log: string) => {\n        if(onActionLog) onActionLog(log);\n        if(!onActionLog) copyToClipboard(log);\n        setClicked(index);\n    };\n\n    useEffect(() => {\n        setTimeout(() => setClicked(null), 2000);\n    }, [clicked]);\n\n    return ( \n        !!data.length ?\n            <div className={`${styles.container} ${data.length >= 10 && styles.padding}`}>\n                {data.map((el, index) => \n                    <div key={index} className={styles.element} onClick={() => onAction && onAction(index, el.log)}>\n\n                        <div className={styles.information}>\n                            <Flex>\n                                <p>{el.name}</p>\n                                {el.start !== -1 && <p> {el.start} s </p>}\n                            </Flex>\n                            <div>\n                                <small>{el.normal_robot || \"-----------------------------------\"}</small>\n                                <small>{el.normal_robot === \"typeString\" ? shorten(el.log, 15) : el.log} {el.normal_events === \"color\" && <BsSquareFill className={styles.color} color={el.pixel_color}/>}</small>\n                            </div>\n                            {(el.normal_events === \"color\") && \n                                <div>\n                                    <small>\n                                        <span><BsArrowReturnRight className={styles.arrow}/> </span>\n                                        <span>{el.pixel_color_robot} </span>\n                                    </small>\n\n                                    {(el.pixel_color_events === \"click\") && \n                                        <small>{el.pixel_color_mouse_click} click</small>\n                                    }\n\n                                    {(el.pixel_color_events === \"move\") &&\n                                        <small>{` { x: ${el.pixel_color_x_coord}, y: ${el.pixel_color_y_coord} }`}</small>\n                                    }       \n\n                                    {(el.pixel_color_events === \"keyboard\") &&\n                                        <small>{el.pixel_color_keyboard}</small>\n                                    }      \n\n                                    {(el.pixel_color_events === \"typing\") && \n                                        <small>{shorten(el.pixel_color_words!, 20)}</small>\n                                    }\n\n                                    {(el.pixel_color_events === \"move click\") && \n                                        <small>{`{ x: ${el.pixel_color_x_coord}, y: ${el.pixel_color_y_coord} } - ${el.pixel_color_mouse_click}`}</small>\n                                    }\n                                </div>\n                            }\n                        </div>\n\n                        {onActionLog && \n                            <div className={styles.action}>\n                                <button>{index === clicked ? onActionLogLabelClicked : onActionLogLabel}</button>\n                            </div>\n                        }\n                    \n                    </div>\n                )}\n            </div>\n        : null\n    )\n}\n\nexport default Log","import styles from './Terminal.module.scss';\nimport { useContext, useState, useEffect } from 'react';\nimport { Context } from 'contents/@context/useContentsContext';\n\nimport Flex from '@components/flex/Flex';\nimport Button from '@components/buttons/Button';\nimport PrintLog from 'contents/@components/print/Log';\n\nimport {BsPlayFill, BsFillPauseFill} from 'react-icons/bs';\nimport {BiExit} from 'react-icons/bi';\n\nconst Terminal = () => {\n  \n  const c = useContext(Context);\n\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    if(c.start === \"pause\" || c.start === \"stop\") return setSeconds(0);\n\n    if(c.script && c.script.script.slice(-1)[0]?.start <= seconds) setSeconds(0);\n\n    const interval = setInterval(() => setSeconds((s) => (s+0.1)), 100);\n\n    return () => clearInterval(interval);\n  }, [c.script, seconds, c.start]);\n\n  return ( \n    \n    (c.start === \"start\" || c.start === \"pause\") \n\n    ?\n\n    <div className={styles.container}>\n\n      <Button color=\"dark\" label1={c.intervalId ? \"Pause\" : \"Start\"} label2={c.intervalId ? <BsFillPauseFill/> : <BsPlayFill/>} onClick={() => c.intervalId ? c.onStopScript(\"pause\") : c.onStartScript()} style={{\"marginBottom\" : \"0.5rem\"}} />\n      \n      <Button color=\"dark\" label1={c.looped} label2=\"Clear\" onClick={c.onClear} />\n\n      <p className={styles.seconds}>\n        <span>{c.script && c.script.name}</span>\n        <span>{seconds.toFixed(2)} s</span>\n      </p>\n\n      <PrintLog data={c.print} />\n\n      <Flex fixed=\"bottom\">\n        <Button color=\"dark\" label1=\"Exit terminal ( esc )\" label2={<BiExit/>} onClick={() => c.onStopScript(\"stop\")} style={{\"marginBottom\" : \"0.5rem\"}} />\n      </Flex>\n\n    </div>\n\n    : \n    \n    null\n  )\n}\n\nexport default Terminal"],"names":["children","flex","sticky","fixed","props","className","styles","flex_type","check","data","onActionLog","onActionLogLabel","onActionLogLabelClicked","useState","clicked","setClicked","onAction","index","log","copyToClipboard","useEffect","setTimeout","length","map","el","onClick","Flex","name","start","normal_robot","shorten","normal_events","color","pixel_color","pixel_color_robot","pixel_color_events","pixel_color_mouse_click","pixel_color_x_coord","pixel_color_y_coord","pixel_color_keyboard","pixel_color_words","c","useContext","Context","seconds","setSeconds","script","slice","interval","setInterval","s","clearInterval","Button","label1","intervalId","label2","onStopScript","onStartScript","style","looped","onClear","toFixed","print"],"sourceRoot":""}