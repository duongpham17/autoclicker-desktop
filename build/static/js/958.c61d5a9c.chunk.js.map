{"version":3,"file":"static/js/958.c61d5a9c.chunk.js","mappings":"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","sources":["webpack://frontend/./src/@components/flex/Flex.module.scss?5a8f","@components/flex/Flex.tsx","webpack://frontend/./src/@components/observer/Observer.module.scss?654a","@components/observer/Observer.tsx","webpack://frontend/./src/contents/terminal/Terminal.module.scss?d434","webpack://frontend/./src/contents/@components/log/Log.module.scss?be41","contents/@components/log/Log.tsx","contents/terminal/Terminal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Flex_container__9+hPm\",\"sticky\":\"Flex_sticky__IjtC4\",\"evenly\":\"Flex_evenly__tm+yC\",\"between\":\"Flex_between__J9aHA\",\"around\":\"Flex_around__AcHSs\",\"fixed-bottom\":\"Flex_fixed-bottom__aIoEy\",\"fixed-top\":\"Flex_fixed-top__tjXxJ\"};","import styles from './Flex.module.scss';\nimport React from 'react';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode,\n  flex?: \"between\" | \"evenly\" | \"around\",\n  sticky?: boolean,\n  fixed?: \"bottom\" | \"top\" | null,\n}\n\nconst Flex = ({children, flex, sticky, fixed, ...props}: Props) => {\n  \n  const check = (flex_type: Props[\"flex\"] = \"between\") => {\n    if(flex_type === \"evenly\") return styles.evenly;\n    if(flex_type === \"around\") return styles.around;\n    if(flex_type === \"between\") return styles.between\n  }\n\n  return (\n    <div className={`${styles.container} ${check(flex)} ${sticky && styles.sticky} ${fixed && styles[`fixed-${fixed}`]}`} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport default Flex","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Observer_container__fqmeT\",\"show\":\"Observer_show__zCz8Q\"};","import styles from './Observer.module.scss';\nimport React, {useEffect, useRef} from 'react';\n\ninterface Props {\n    children: React.ReactNode,\n    threshold?: number\n}\n\nconst Observer = ({children, threshold=0.5}: Props) => {\n\n    const ref = useRef<any>();\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            const [entry] = entries;\n            entry.target.classList.toggle(styles.show, entry.isIntersecting);  \n            if(entry.isIntersecting) observer.unobserve(entry.target);\n        }, {\n            threshold: threshold\n        });\n        observer.observe(ref.current);\n    }, [threshold]);\n\n    return (\n        <div className={styles.container} ref={ref}>\n            {children}\n        </div>\n    )\n}\n\nexport default Observer","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Terminal_container__PLVv3\",\"seconds\":\"Terminal_seconds__gwova\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Log_container__7Ijzr\",\"element\":\"Log_element__1Nd-G\",\"iconArrow\":\"Log_iconArrow__+L+TC\",\"iconColor\":\"Log_iconColor__brWA7\",\"false\":\"Log_false__rd2CP\",\"true\":\"Log_true__FztmU\",\"action\":\"Log_action__1AwjR\",\"completed\":\"Log_completed__v1wNO\",\"padding\":\"Log_padding__mzi-W\"};","import styles from './Log.module.scss';\nimport {PrintLogsTypes} from 'contents/@types';\nimport {BsArrowReturnRight, BsFillSquareFill} from 'react-icons/bs';\nimport {shorten} from 'utils';\nimport Observer from '@components/observer/Observer';\n\ninterface Props {\n    data: PrintLogsTypes[],\n}\n\nconst Log = ({data}: Props) => {\n    return (  \n        !!data.length ?\n            <div className={`${styles.container} ${data.length >= 10 && styles.padding}`}>\n                {data.map((el, index) => \n                    <Observer key={index}>\n                        <div className={`${styles.element} ${el.start === -1 && styles.completed} ${styles[`box${index}`]}`} style={{\"borderColor\": el.border_color}}>\n    \n                            <div>\n                                <p>{el.name}</p>\n                                <p>{el.start === -1 ? el.normal_log : el.start} {el.start !== -1 && <small> s </small>}</p>\n                            </div>\n    \n                            <div>\n                                <p><small>{el.normal_robot}</small></p>\n                                {el.normal_robot === \"getPixelColor\" &&\n                                    <p><small> {el.normal_log} </small> <BsFillSquareFill className={styles.iconColor} color={el.pixel_color}/></p>\n                                }\n                                {el.normal_robot !== \"getPixelColor\" && \n                                    <p><small> {el.start !== -1 && el.normal_log} </small></p>\n                                }\n                            </div>\n                            \n                            { el.normal_event === \"color\" &&\n                                <div>\n                                    <p><BsArrowReturnRight className={`${styles.iconArrow} ${(!el.pixel_color_detected && el.pixel_color) ? styles.false : styles.true}`} /> <small>color found</small></p>\n                                    <p><small> {el.pixel_color_detected ? \"true\" :  \"false\"} </small></p>\n                                </div>\n                            }\n                            \n                            { !!el.loop_remainder &&\n                                <div>\n                                    <p><BsArrowReturnRight className={styles.iconArrow} /> <small>run at loop {el.loop_remainder}</small></p>\n                                </div>\n                            }\n\n                            { !!el.skip_remainder &&\n                                <div>\n                                    <p><BsArrowReturnRight className={styles.iconArrow} /> <small>skip at loop {el.skip_remainder}</small></p>\n                                </div>\n                            }\n    \n                            { el.normal_event === \"color\" && \n                                <div>\n                                    <p> <BsArrowReturnRight className={styles.iconArrow} /> <small>{el.pixel_color_robot}</small> </p>\n                                    <p> <small>{shorten(el.pixel_color_log, 30)}</small> </p>\n                                </div>\n                            }\n                    \n                        </div>\n                    </Observer>\n                )}\n            </div>\n        : null\n    )\n}\n\n\nexport default Log","import styles from './Terminal.module.scss';\nimport { useContext, useState, useEffect } from 'react';\nimport { Context } from 'contents/@context/useContentsContext';\n\nimport Flex from '@components/flex/Flex';\nimport Button from '@components/buttons/Button';\nimport PrintLog from 'contents/@components/log/Log';\n\nimport {BsPlayFill, BsFillPauseFill} from 'react-icons/bs';\nimport {BiExit} from 'react-icons/bi';\n\nconst Terminal = () => {\n  \n  const c = useContext(Context);\n  const [seconds, setSeconds] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    if(c.start === \"pause\" || c.start === \"stop\") {\n      setSeconds(0);\n      setTotal(0);\n      return\n    };\n\n    const interval = setInterval(() => {\n      setSeconds((s) => (s+0.1));\n      setTotal((t) => (t+0.1) )\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, [c.script, seconds, c.start, total]);\n\n  useEffect(() => {\n    setSeconds(0);\n  }, [c.looped])\n\n  return ( \n    \n    (c.start === \"start\" || c.start === \"pause\") \n\n    ?\n\n    <div className={styles.container}>\n\n      <Button color=\"dark\" label1={c.intervalId ? \"Pause\" : \"Start\"} label2={c.intervalId ? <BsFillPauseFill/> : <BsPlayFill/>} onClick={() => c.intervalId ? c.onStopScript(\"pause\") : c.onStartScript()} style={{\"marginBottom\" : \"0.5rem\"}} />\n      \n      <Button color=\"dark\" label1={`Looped ${c.looped} / ${c.script?.max_loops}`} label2=\"Clear\" onClick={c.onClear} />\n\n      <p className={styles.seconds}>\n        <span>{c.script && c.script.name}</span>\n        <span> {total.toFixed(2)} | {seconds.toFixed(2)} s</span>\n      </p>\n\n      <PrintLog data={c.print} />\n\n      <Flex fixed=\"bottom\">\n        <Button color=\"black\" label1=\"Exit terminal ( esc )\" label2={<BiExit/>} onClick={() => c.onStopScript(\"stop\")} style={{\"marginBottom\" : \"0.5rem\"}} />\n      </Flex>\n\n    </div>\n\n    : \n    \n    null\n  )\n}\n\nexport default Terminal"],"names":["children","flex","sticky","fixed","props","className","styles","flex_type","check","threshold","ref","useRef","useEffect","observer","IntersectionObserver","entries","entry","target","classList","toggle","isIntersecting","unobserve","observe","current","data","length","map","el","index","Observer","start","style","border_color","name","normal_log","normal_robot","color","pixel_color","normal_event","pixel_color_detected","loop_remainder","skip_remainder","pixel_color_robot","shorten","pixel_color_log","c","useContext","Context","useState","seconds","setSeconds","total","setTotal","interval","setInterval","s","t","clearInterval","script","looped","Button","label1","intervalId","label2","onClick","onStopScript","onStartScript","max_loops","onClear","toFixed","print","Flex"],"sourceRoot":""}